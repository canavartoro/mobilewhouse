//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.9157
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.CompactFramework.Design.Data, Version 2.0.50727.9157.
// 
namespace MobileWhouse.ReportServ {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ReportWebServiceSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class ReportWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        /// <remarks/>
        public ReportWebService() {
            this.Url = "http://localhost:62624/WriteWebService/ReportWebService.asmx";
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendDirectReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendDirectReport(string reportId, string printerName, string typeName, string methodName, System.Data.DataSet parameters) {
            object[] results = this.Invoke("SendDirectReport", new object[] {
                        reportId,
                        printerName,
                        typeName,
                        methodName,
                        parameters});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSendDirectReport(string reportId, string printerName, string typeName, string methodName, System.Data.DataSet parameters, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SendDirectReport", new object[] {
                        reportId,
                        printerName,
                        typeName,
                        methodName,
                        parameters}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSendDirectReport(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReportPdf", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetReportPdf(int userId, string userPassword, decimal reportCode, string procecureName, string[] parameterField, object[] parameterValue) {
            object[] results = this.Invoke("GetReportPdf", new object[] {
                        userId,
                        userPassword,
                        reportCode,
                        procecureName,
                        parameterField,
                        parameterValue});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetReportPdf(int userId, string userPassword, decimal reportCode, string procecureName, string[] parameterField, object[] parameterValue, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetReportPdf", new object[] {
                        userId,
                        userPassword,
                        reportCode,
                        procecureName,
                        parameterField,
                        parameterValue}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndGetReportPdf(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReport1Pdf", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ServiceResultOfArrayOfByte GetReport1Pdf(decimal reportCode, string reportGUID, string pageCode, string sessionId) {
            object[] results = this.Invoke("GetReport1Pdf", new object[] {
                        reportCode,
                        reportGUID,
                        pageCode,
                        sessionId});
            return ((ServiceResultOfArrayOfByte)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetReport1Pdf(decimal reportCode, string reportGUID, string pageCode, string sessionId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetReport1Pdf", new object[] {
                        reportCode,
                        reportGUID,
                        pageCode,
                        sessionId}, callback, asyncState);
        }
        
        /// <remarks/>
        public ServiceResultOfArrayOfByte EndGetReport1Pdf(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ServiceResultOfArrayOfByte)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendDirectReport2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendDirectReport2(string printerName, int userId, string userPassword, decimal reportCode, string procecureName, string[] parameterField, object[] parameterValue) {
            object[] results = this.Invoke("SendDirectReport2", new object[] {
                        printerName,
                        userId,
                        userPassword,
                        reportCode,
                        procecureName,
                        parameterField,
                        parameterValue});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSendDirectReport2(string printerName, int userId, string userPassword, decimal reportCode, string procecureName, string[] parameterField, object[] parameterValue, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SendDirectReport2", new object[] {
                        printerName,
                        userId,
                        userPassword,
                        reportCode,
                        procecureName,
                        parameterField,
                        parameterValue}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndSendDirectReport2(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPrinters", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetPrinters() {
            object[] results = this.Invoke("GetPrinters", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPrinters(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPrinters", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public string[] EndGetPrinters(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }
    }
    
    /// <remarks/>
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ServiceResultOfArrayOfByte {
        
        private string messageField;
        
        private bool resultField;
        
        private byte[] valueField;
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public bool Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
}
