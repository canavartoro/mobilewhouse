//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.9157
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.9157.
// 
#pragma warning disable 1591

namespace MobileWhouse.ReportServ {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9157")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ReportWebServiceSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(object[]))]
    public partial class ReportWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SendDirectReportOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportPdfOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReport1PdfOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendDirectReport2OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPrintersOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ReportWebService() {
            this.Url = "http://localhost:62624/WriteWebService/ReportWebService.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SendDirectReportCompletedEventHandler SendDirectReportCompleted;
        
        /// <remarks/>
        public event GetReportPdfCompletedEventHandler GetReportPdfCompleted;
        
        /// <remarks/>
        public event GetReport1PdfCompletedEventHandler GetReport1PdfCompleted;
        
        /// <remarks/>
        public event SendDirectReport2CompletedEventHandler SendDirectReport2Completed;
        
        /// <remarks/>
        public event GetPrintersCompletedEventHandler GetPrintersCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendDirectReport", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendDirectReport(string reportId, string printerName, string typeName, string methodName, System.Data.DataSet parameters) {
            object[] results = this.Invoke("SendDirectReport", new object[] {
                        reportId,
                        printerName,
                        typeName,
                        methodName,
                        parameters});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendDirectReportAsync(string reportId, string printerName, string typeName, string methodName, System.Data.DataSet parameters) {
            this.SendDirectReportAsync(reportId, printerName, typeName, methodName, parameters, null);
        }
        
        /// <remarks/>
        public void SendDirectReportAsync(string reportId, string printerName, string typeName, string methodName, System.Data.DataSet parameters, object userState) {
            if ((this.SendDirectReportOperationCompleted == null)) {
                this.SendDirectReportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendDirectReportOperationCompleted);
            }
            this.InvokeAsync("SendDirectReport", new object[] {
                        reportId,
                        printerName,
                        typeName,
                        methodName,
                        parameters}, this.SendDirectReportOperationCompleted, userState);
        }
        
        private void OnSendDirectReportOperationCompleted(object arg) {
            if ((this.SendDirectReportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendDirectReportCompleted(this, new SendDirectReportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReportPdf", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetReportPdf(int userId, string userPassword, decimal reportCode, string procecureName, string[] parameterField, object[] parameterValue) {
            object[] results = this.Invoke("GetReportPdf", new object[] {
                        userId,
                        userPassword,
                        reportCode,
                        procecureName,
                        parameterField,
                        parameterValue});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetReportPdfAsync(int userId, string userPassword, decimal reportCode, string procecureName, string[] parameterField, object[] parameterValue) {
            this.GetReportPdfAsync(userId, userPassword, reportCode, procecureName, parameterField, parameterValue, null);
        }
        
        /// <remarks/>
        public void GetReportPdfAsync(int userId, string userPassword, decimal reportCode, string procecureName, string[] parameterField, object[] parameterValue, object userState) {
            if ((this.GetReportPdfOperationCompleted == null)) {
                this.GetReportPdfOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportPdfOperationCompleted);
            }
            this.InvokeAsync("GetReportPdf", new object[] {
                        userId,
                        userPassword,
                        reportCode,
                        procecureName,
                        parameterField,
                        parameterValue}, this.GetReportPdfOperationCompleted, userState);
        }
        
        private void OnGetReportPdfOperationCompleted(object arg) {
            if ((this.GetReportPdfCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportPdfCompleted(this, new GetReportPdfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetReport1Pdf", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ServiceResultOfArrayOfByte GetReport1Pdf(decimal reportCode, string reportGUID, string pageCode, string sessionId) {
            object[] results = this.Invoke("GetReport1Pdf", new object[] {
                        reportCode,
                        reportGUID,
                        pageCode,
                        sessionId});
            return ((ServiceResultOfArrayOfByte)(results[0]));
        }
        
        /// <remarks/>
        public void GetReport1PdfAsync(decimal reportCode, string reportGUID, string pageCode, string sessionId) {
            this.GetReport1PdfAsync(reportCode, reportGUID, pageCode, sessionId, null);
        }
        
        /// <remarks/>
        public void GetReport1PdfAsync(decimal reportCode, string reportGUID, string pageCode, string sessionId, object userState) {
            if ((this.GetReport1PdfOperationCompleted == null)) {
                this.GetReport1PdfOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReport1PdfOperationCompleted);
            }
            this.InvokeAsync("GetReport1Pdf", new object[] {
                        reportCode,
                        reportGUID,
                        pageCode,
                        sessionId}, this.GetReport1PdfOperationCompleted, userState);
        }
        
        private void OnGetReport1PdfOperationCompleted(object arg) {
            if ((this.GetReport1PdfCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReport1PdfCompleted(this, new GetReport1PdfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendDirectReport2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SendDirectReport2(string printerName, int userId, string userPassword, decimal reportCode, string procecureName, string[] parameterField, object[] parameterValue) {
            object[] results = this.Invoke("SendDirectReport2", new object[] {
                        printerName,
                        userId,
                        userPassword,
                        reportCode,
                        procecureName,
                        parameterField,
                        parameterValue});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SendDirectReport2Async(string printerName, int userId, string userPassword, decimal reportCode, string procecureName, string[] parameterField, object[] parameterValue) {
            this.SendDirectReport2Async(printerName, userId, userPassword, reportCode, procecureName, parameterField, parameterValue, null);
        }
        
        /// <remarks/>
        public void SendDirectReport2Async(string printerName, int userId, string userPassword, decimal reportCode, string procecureName, string[] parameterField, object[] parameterValue, object userState) {
            if ((this.SendDirectReport2OperationCompleted == null)) {
                this.SendDirectReport2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendDirectReport2OperationCompleted);
            }
            this.InvokeAsync("SendDirectReport2", new object[] {
                        printerName,
                        userId,
                        userPassword,
                        reportCode,
                        procecureName,
                        parameterField,
                        parameterValue}, this.SendDirectReport2OperationCompleted, userState);
        }
        
        private void OnSendDirectReport2OperationCompleted(object arg) {
            if ((this.SendDirectReport2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendDirectReport2Completed(this, new SendDirectReport2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPrinters", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetPrinters() {
            object[] results = this.Invoke("GetPrinters", new object[0]);
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPrintersAsync() {
            this.GetPrintersAsync(null);
        }
        
        /// <remarks/>
        public void GetPrintersAsync(object userState) {
            if ((this.GetPrintersOperationCompleted == null)) {
                this.GetPrintersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPrintersOperationCompleted);
            }
            this.InvokeAsync("GetPrinters", new object[0], this.GetPrintersOperationCompleted, userState);
        }
        
        private void OnGetPrintersOperationCompleted(object arg) {
            if ((this.GetPrintersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPrintersCompleted(this, new GetPrintersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.9157")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class ServiceResultOfArrayOfByte {
        
        private string messageField;
        
        private bool resultField;
        
        private byte[] valueField;
        
        /// <remarks/>
        public string Message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        public bool Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9157")]
    public delegate void SendDirectReportCompletedEventHandler(object sender, SendDirectReportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9157")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendDirectReportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendDirectReportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9157")]
    public delegate void GetReportPdfCompletedEventHandler(object sender, GetReportPdfCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9157")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportPdfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportPdfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9157")]
    public delegate void GetReport1PdfCompletedEventHandler(object sender, GetReport1PdfCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9157")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReport1PdfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReport1PdfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceResultOfArrayOfByte Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceResultOfArrayOfByte)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9157")]
    public delegate void SendDirectReport2CompletedEventHandler(object sender, SendDirectReport2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9157")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendDirectReport2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendDirectReport2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9157")]
    public delegate void GetPrintersCompletedEventHandler(object sender, GetPrintersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.9157")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPrintersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPrintersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591